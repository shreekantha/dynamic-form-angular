{"version":3,"sources":["./src/app/dynamic-form-main-component/dynamic-form-main-component.component.ts","./src/app/dynamic-form-main-component/dynamic-form-main-component.component.html","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/dynamic-form/dynamic-form-input/dynamic-form-input.component.ts","./src/app/dynamic-form/dynamic-form-input/dynamic-form-input.component.html","./src/environments/environment.ts","./src/app/side-nav/side-nav.component.ts","./src/app/side-nav/side-nav.component.html","./src/app/dynamic-form/formfield-control.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dynamic-form/dynamic-form.component.html","./src/app/dynamic-form/dynamic-form.component.ts","./src/app/dynamic-form/common/service-form-field.ts","./src/app/app-routing.module.ts","./src/app/dynamic-form/error-message/error-message.component.html","./src/app/dynamic-form/error-message/error-message.component.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { ServiceFormCategory } from '../dynamic-form/common/service-form-category';\r\nimport { FormfieldControlService } from '../dynamic-form/formfield-control.service';\r\n\r\n@Component({\r\n  selector: 'app-dynamic-form-main-component',\r\n  templateUrl: './dynamic-form-main-component.component.html',\r\n  styleUrls: ['./dynamic-form-main-component.component.css'],\r\n})\r\nexport class DynamicFormMainComponentComponent {\r\n  serviceFormCategory: Observable<ServiceFormCategory>;\r\n  url: any;\r\n  constructor(\r\n    service: FormfieldControlService,\r\n    private httpClient: HttpClient,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    this.url = this.route.snapshot.queryParams['url'];\r\n    console.log('url:{}', this.url);\r\n    this.httpClient.get(this.url).subscribe((data) => {\r\n      this.serviceFormCategory = of(data as ServiceFormCategory);\r\n      console.log('service form cat:', this.serviceFormCategory);\r\n    });\r\n  }\r\n}\r\n","<DynamicForm\r\n  *ngIf=\"serviceFormCategory\"\r\n  [formData]=\"serviceFormCategory | async\"\r\n></DynamicForm>\r\n","<div class=\"container\">\r\n  <div class=\"row form-group\"></div>\r\n  <div class=\"row form-group\" *ngIf=\"catagories\">\r\n    <div class=\"col-md-6\" *ngFor=\"let cat of catagories\">\r\n      <div class=\"card\">\r\n        <h5 class=\"card-header\">{{ cat.svcName }}</h5>\r\n        <div class=\"card-body\">\r\n          <p class=\"card-text\">\r\n            {{ cat.description }}\r\n          </p>\r\n          <button\r\n            class=\"btn btn-primary\"\r\n            type=\"button\"\r\n            (click)=\"\r\n              onClick(\r\n                'https://gpet-server-app.herokuapp.com/gpet/api/scategory/' +\r\n                  cat.id\r\n              )\r\n            \"\r\n          >\r\n            Configure api\r\n          </button>\r\n          <button\r\n          class=\"btn btn-primary\"\r\n          type=\"button\"\r\n          (click)=\"onClick('/assets/amazonMySql.json')\"\r\n        >\r\n          Configure\r\n        </button>\r\n          <button\r\n          class=\"btn btn-primary\"\r\n          type=\"button\"\r\n          (click)=\"onClick('/assets/ApiGateway.json')\"\r\n        >\r\n          Configure\r\n        </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  catagories: any[] = [];\r\n  constructor(private router: Router, private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n    this.http\r\n      .get('https://gpet-server-app.herokuapp.com/gpet/api/scategory/')\r\n      .subscribe((data) => {\r\n        this.catagories = data as any;\r\n        console.log(data);\r\n      });\r\n    //    this.catagories.push({ svcName: \"Template\", api: \"/assets/amazonMySql.json\" })\r\n  }\r\n\r\n  onClick(url) {\r\n    console.log('-----------', url);\r\n    this.router.navigate(['/configure'], { queryParams: { url: url } });\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ServiceForm } from '../common/service-form';\r\nimport { FormField } from '../common/service-form-field';\r\nimport { ServiceFormFieldGroup } from '../common/service-form-field-group';\r\n\r\n@Component({\r\n  selector: 'FormInput',\r\n  templateUrl: './dynamic-form-input.component.html',\r\n  styleUrls: ['./dynamic-form-input.component.css'],\r\n})\r\nexport class DynamicFormInputComponent {\r\n  @Input() input: FormField<string>;\r\n  @Input() form: FormGroup;\r\n  @Input() serviceForm: ServiceForm;\r\n  @Input() group: ServiceFormFieldGroup;\r\n  @Output() dependencyFieldData = new EventEmitter();\r\n  dependent: any;\r\n  listOfdependentFields: FormField<string>[] = [];\r\n  displayThis = false;\r\n  size: any;\r\n  constructor() {\r\n    // console.log(' ---------', this.group);\r\n  }\r\n  get isValid() {\r\n    return this.form.controls[this.input.key].valid;\r\n    return true;\r\n  }\r\n\r\n  onChange(formKey, value, dependentKeys, dependentType) {\r\n    const data = { formKey, dependentKeys, value, dependentType }\r\n    console.log(\"data:=========\",data)\r\n    this.dependencyFieldData.emit(data);\r\n  \r\n  }\r\n}\r\n","<div id=\"form\" [formGroup]=\"form\">\r\n \r\n  <div [ngSwitch]=\"input.controlType\" >\r\n<div  class=\"abc\">\r\n    <div *ngSwitchCase=\"'textbox'\">\r\n      <mat-form-field class=\"full-width\" *ngIf=\"!input.dependency.notShow\">\r\n        <mat-label [attr.for]=\"input.key\">{{ input.label }}</mat-label>\r\n        <input\r\n        matInput \r\n          class=\"form-control\"\r\n          [formControlName]=\"input.key\"\r\n          [id]=\"input.key\"\r\n          [type]=\"input.type\"\r\n        />\r\n        \r\n        <mat-error *ngIf=\"form.get(input.key).invalid && (form.get(input.key).dirty || form.get(input.key).touched)\">\r\n          <!-- <small style=\"color: red\" *ngIf=\"form.get(input.key).errors.required\">\r\n            {{ input.label }} is Required\r\n          </small>\r\n          <small style=\"color: red\" *ngIf=\"form.get(input.key).errors.minlength\">\r\n            {{ input.label }} must be minmum 10 characters.\r\n          </small>\r\n          <small style=\"color: red\" *ngIf=\"form.get(input.key).errors.maxlength\">\r\n            {{ input.label }} must be maximun 11 characters.\r\n          </small> -->\r\n          <app-error-message  [input]=\"input\" [form]=\"form\" ></app-error-message>\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'dropdown'\">\r\n      <mat-form-field  class=\"full-width\" *ngIf=\"!input.dependency.notShow\">\r\n        <mat-label [attr.for]=\"input.key\">{{ input.label }}</mat-label>\r\n        <mat-select\r\n          [id]=\"input.key\"\r\n          [formControlName]=\"input.key\"\r\n          (selectionChange)=\"\r\n            onChange(\r\n              serviceForm.key,\r\n              selected,\r\n              input.dependents,\r\n              input.dependentType\r\n            )\r\n          \"\r\n          [(value)]=\"selected\"\r\n        >\r\n          <mat-option *ngFor=\"let opt of input.options\" [value]=\"opt.value\">\r\n            {{ opt.value }}\r\n          </mat-option>\r\n        </mat-select>\r\n        <div *ngIf=\"form.get(input.key).dirty || form.get(input.key).touched\">\r\n          <small style=\"color: red\" *ngIf=\"!form.get(input.key).valid\">\r\n            {{ input.label }} is Required\r\n          </small>\r\n        </div>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'checkbox'\">\r\n      <div class=\"form-check\">\r\n        <input\r\n          class=\"form-check-input\"\r\n          type=\"checkbox\"\r\n          [formControlName]=\"input.key\"\r\n          [id]=\"input.key\"\r\n        />\r\n        <label class=\"form-check-label\" [attr.for]=\"input.key\">{{\r\n          input.label\r\n        }}</label>\r\n        <div *ngIf=\"form.get(input.key).dirty || form.get(input.key).touched\">\r\n          <small style=\"color: red\" *ngIf=\"!form.get(input.key).valid\">\r\n            {{ input.label }} is Required\r\n          </small>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'radio'\">\r\n      <mat-radio-group *ngIf=\"!input.dependency.notShow\">\r\n       \r\n        <!-- {{input | json}} -->\r\n          <mat-radio-group\r\n            [formControlName]=\"input.key\"\r\n          >\r\n          <mat-radio-button  *ngFor=\"let opt of input.options\" class=\"form-check-label\" \r\n          (change)=\"onChange( serviceForm.key, opt.value, input.dependents,input.dependentType)\" [attr.for]=\"opt.key\">\r\n            {{ opt.value }}\r\n          </mat-radio-button>\r\n      </mat-radio-group>\r\n        <div *ngIf=\"form.get(input.key).dirty || form.get(input.key).touched\">\r\n          <small style=\"color: red\" *ngIf=\"!form.get(input.key).valid\">\r\n            {{ input.label }} is Required\r\n          </small>\r\n        </div>\r\n      </mat-radio-group>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"'textarea'\">\r\n      <label [attr.for]=\"input.key\">{{ input.label }}</label>\r\n      <textarea\r\n        class=\"form-control\"\r\n        [formControlName]=\"input.key\"\r\n        [id]=\"input.key\"\r\n        rows=\"5\"\r\n      ></textarea>\r\n      <div *ngIf=\"form.get(input.key).dirty || form.get(input.key).touched\">\r\n        <small style=\"color: red\" *ngIf=\"!form.get(input.key).valid\">\r\n          {{ input.label }} is Required\r\n        </small>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-side-nav',\r\n  templateUrl: './side-nav.component.html',\r\n  styleUrls: ['./side-nav.component.css']\r\n})\r\nexport class SideNavComponent {\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(private breakpointObserver: BreakpointObserver) {}\r\n\r\n}\r\n","<mat-sidenav-container class=\"sidenav-container\">\r\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\r\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\r\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\r\n      [opened]=\"(isHandset$ | async) === false\">\r\n    <mat-toolbar>Menu</mat-toolbar>\r\n    <mat-nav-list>\r\n      <a mat-list-item href=\"#\">Link 1</a>\r\n      <a mat-list-item href=\"#\">Link 2</a>\r\n      <a mat-list-item href=\"#\">Link 3</a>\r\n    </mat-nav-list>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <mat-toolbar color=\"primary\">\r\n      <button\r\n        type=\"button\"\r\n        aria-label=\"Toggle sidenav\"\r\n        mat-icon-button\r\n        (click)=\"drawer.toggle()\"\r\n        *ngIf=\"isHandset$ | async\">\r\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\r\n      </button>\r\n      <span>NewDynamicFormPoc</span>\r\n    </mat-toolbar>\r\n    <!-- Add Content Here -->\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  ValidatorFn,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { of } from 'rxjs';\r\nimport { ServiceFormCategory } from './common/service-form-category';\r\nimport { FormField } from './common/service-form-field';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FormfieldControlService {\r\n  constructor() {}\r\n\r\n  \r\n\r\n  toServiceFormGroup(category: ServiceFormCategory): FormGroup {\r\n    const group: any = {};\r\n\r\n    console.log('category:{}', category);\r\n    category.svcDetails.forms.forEach((form) => {\r\n      form.groups.forEach((formgroup) =>\r\n        formgroup.fields.forEach((input) => {\r\n          console.log(\"input.validator.required\",input.validator);\r\n          if(input.validator){\r\n\r\n            let validator: ValidatorFn[] = input.validator.required\r\n            ? [Validators.required]\r\n            : [];\r\n            if(input.validator.minLength){\r\n                   validator.push(Validators.minLength(input.validator.minLength));\r\n            }\r\n            if(input.validator.maxLength){\r\n              validator.push(Validators.maxLength(input.validator.maxLength));\r\n            }\r\n            if(input.validator.pattern){\r\n              validator.push(Validators.pattern(input.validator.pattern));\r\n            }\r\n\r\n            group[input.key] =  new FormControl(input.value || '', validator)\r\n              \r\n      \r\n      }else{\r\n        group[input.key] = new FormControl(input.value || '');\r\n      }\r\n      \r\n    })\r\n  )\r\n});\r\n         \r\n   console.log(\"form--->\",group);      \r\n         \r\n      \r\n  \r\n\r\n    return new FormGroup(group);\r\n  }\r\n\r\n  getFormFields(data: any) {\r\n    const inputs: FormField<string>[] = [];\r\n    data.forEach((element) => {\r\n      inputs.push(new FormField<string>(element));\r\n    });\r\n\r\n    return of(inputs.sort((a, b) => a.order - b.order));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'AngularDynamicForms';\r\n  // formFields: Observable<FormField<any>[]>;\r\n  // constructor(service: FormfieldControlService,private httpClient: HttpClient,\r\n  //   private router:Router) {\r\n  //   // this.formFields = service.getFormFields();\r\n  //   this.httpClient.get('/assets/DynamicFormData.json').subscribe( data => {\r\n  //     this.formFields = service.getFormFields(data as []);\r\n  //     this.formFields.forEach(a =>{\r\n  //     })\r\n  //   });\r\n  // }\r\n}\r\n","\r\n<router-outlet></router-outlet>\r\n<!-- <app-dynamic-form  *ngIf = \"formFields\" [formFields]=\"formFields | async \"></app-dynamic-form> -->\r\n","import { HttpClientModule } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { DynamicFormMainComponentComponent } from './dynamic-form-main-component/dynamic-form-main-component.component';\r\nimport { DynamicFormInputComponent } from './dynamic-form/dynamic-form-input/dynamic-form-input.component';\r\nimport { DynamicFormComponent } from './dynamic-form/dynamic-form.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SideNavComponent } from './side-nav/side-nav.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {FlexLayoutModule} from '@angular/flex-layout';\r\nimport { ErrorMessageComponent } from './dynamic-form/error-message/error-message.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DynamicFormInputComponent,\r\n    DynamicFormComponent,\r\n    DynamicFormMainComponentComponent,\r\n    HomeComponent,\r\n    SideNavComponent,\r\n    ErrorMessageComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    LayoutModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    FlexLayoutModule,\r\n    BrowserAnimationsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","<div class=\"container\" class=\"body\">\r\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form\" >\r\n    <div class=\"flex-container\" fxLayout=\"column\">\r\n      <div class=\"col-md-12\">&nbsp;</div>\r\n    </div>\r\n    <div class=\"flex-container\" fxLayout=\"column\">\r\n      <div class=\"col-md-12\">\r\n        <h3>{{ formData.svcName }}</h3>\r\n      </div>\r\n    </div>\r\n    <div class=\"container\">\r\n\r\n        <div *ngFor=\"let serviceForm of formData.svcDetails.forms\" class=\"form-group\">\r\n          <mat-card class=\"mat-card\" *ngIf = \"!serviceForm.dependency.notShow\">\r\n            <mat-card-header>\r\n          \r\n              <mat-card-title>{{ serviceForm.name }}</mat-card-title>\r\n              <mat-card-subtitle>{{ serviceForm.description }}</mat-card-subtitle>\r\n            </mat-card-header>\r\n            <divider></divider>\r\n            <mat-card-content>\r\n              <!-- <div class=\"container\"> -->\r\n                <div class=\"flex-container\" fxLayout=\"row\" fxLayout.xs=\"column\" *ngFor=\"let group of serviceForm.groups\">\r\n                  <div fxFlex=\"1 1 auto\" *ngFor=\"let formField of group.fields\" >\r\n                    <FormInput  [group]=\"group\" [serviceForm]=\"serviceForm\" [input]=\"formField\"\r\n                      [form]=\"form\" (dependencyFieldData)=\"onChange($event)\"></FormInput>\r\n                  </div>\r\n                 \r\n                </div>\r\n              <!-- </div> -->\r\n            </mat-card-content>\r\n          </mat-card>\r\n        </div>\r\n    </div>\r\n     \r\n    <div class=\"row\">\r\n      <div class=\"form-group col-md-12 text-right\">\r\n        <button mat-button color=\"primary\" type=\"submit\" [disabled]=\"form.invalid\">\r\n          Create Estimate\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n\r\n  <div *ngIf=\"payLoad\" class=\"form-group\">\r\n    <strong>Here's the payload</strong><br />{{ payLoad }}\r\n  </div>\r\n</div>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { ServiceFormCategory } from './common/service-form-category';\r\nimport { FormField } from './common/service-form-field';\r\nimport { FormfieldControlService } from './formfield-control.service';\r\n\r\n\r\n@Component({\r\n  selector: 'DynamicForm',\r\n  templateUrl: './dynamic-form.component.html',\r\n  styleUrls: ['./dynamic-form.component.css'],\r\n})\r\nexport class DynamicFormComponent implements OnInit {\r\n  // @Input() formFields: FormField<string>[] = [];\r\n  @Input() formData: ServiceFormCategory;\r\n  form: FormGroup;\r\n  displayThis: boolean;\r\n  size: number;\r\n  payLoad = ' ';\r\n  listOfdependentFields: FormField<string>[] = [];\r\n\r\n\r\n  constructor(private formfieldService: FormfieldControlService) { }\r\n\r\n  ngOnInit(): void {\r\n    console.log('formData:', this.formData);\r\n    this.form = this.formfieldService.toServiceFormGroup(this.formData);\r\n\r\n  }\r\n\r\n  onChange(data) {\r\n    //Object Destructuring\r\n    const { dependentKeys, value, formKey, dependentType } = data;\r\n\r\n    if (dependentKeys) {\r\n      switch (dependentType) {\r\n        case \"CONTROL\":\r\n\r\n          this.formFieldPrep(formKey, dependentKeys, value);\r\n          break;\r\n\r\n        case \"FORM\":\r\n\r\n        this.formPrep(dependentKeys,value);\r\n          break;\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n  \r\n  formPrep(dependentKeys: any, value: any) {\r\n   dependentKeys.forEach(element => {\r\n    this.formData.svcDetails.forms.forEach(formField =>{\r\n\r\n    if(formField.key === element ){\r\n    \r\n      if(formField.dependency.is === value && formField.dependency.notShow){\r\n        formField.dependency.notShow = false;\r\nconsole.log(\"coming in notshow false \")\r\n       const serviceForm =  this.formData.svcDetails.forms.find(frm =>frm.key === element)\r\n       console.log(\"serviceForm\",serviceForm.key)\r\n       serviceForm.groups\r\n        .forEach(group => {\r\n          console.log(\"coming in notshow false group:\",group)\r\n\r\n          group.fields.forEach(field=>{\r\n            this.form.get(field.key).enable();\r\n\r\n          })\r\n          \r\n        });\r\n      \r\n\r\n      }else{\r\n        formField.dependency.notShow = true;\r\n        console.log(\"coming here\")\r\n        const serviceForm = this.formData.svcDetails.forms.find(frm =>frm.key === element)\r\n        console.log(\"serviceForm else\",serviceForm.key)\r\n\r\n        serviceForm.groups.forEach(group => {\r\n          console.log(\"form----->\",group);\r\n          group.fields.forEach(field=>{\r\n            console.log(\"field.key\",field.key);\r\n            this.form.get(field.key).disable();\r\n\r\n          })\r\n          \r\n        });\r\n        \r\n      }\r\n    }\r\n\r\n  });\r\n\r\n})\r\n\r\nconsole.log(\"formm--->\",this.form);\r\n  }\r\n\r\n  private formFieldPrep(formKey: any, dependentKeys: any, value: any) {\r\n    this.formData.svcDetails.forms.find(form => form.key === formKey).\r\n      // this.formData.svcDetails.forms.forEach(ele => {\r\n      //   console.log(\"key \", ele.key)\r\n      //   ele.\r\n      groups.forEach(element => {\r\n        element.fields.forEach(elem => {\r\n          dependentKeys.forEach(dependentKey => {\r\n            if (dependentKey === elem.key) {\r\n              console.log(\"dependentKey.dependency.is === elem.value && \", elem.dependency.is, \"===\", value);\r\n              if (elem.dependency.is === value && elem.dependency.notShow) {\r\n                elem.dependency.notShow = false;\r\n                this.form.get(elem.key).enable();\r\n\r\n              } else {\r\n                elem.dependency.notShow = true;\r\n                this.form.get(elem.key).disable();\r\n\r\n              }\r\n            }\r\n\r\n          });\r\n\r\n        });\r\n      });\r\n    // })\r\n  }\r\n\r\n  onSubmit() {\r\n    this.payLoad = JSON.stringify(this.form.getRawValue());\r\n    this.form.reset();\r\n  }\r\n\r\n\r\n}\r\n","import { Dependency } from \"./dependency\";\r\nimport { Validator } from \"./validator\";\r\n\r\nexport class FormField<T> {\r\n  value: T;\r\n  key: string;\r\n  label: string;\r\n  required: boolean;\r\n  validator: Validator;\r\n  order: number;\r\n  controlType: string;\r\n  type: string;\r\n  rowDivision: number;\r\n  dependency: Dependency;\r\n  dependents: string[]\r\n  dependentType: string;\r\n  dependencyOn: boolean;\r\n  checked:boolean;\r\n  \r\n  options: { key: string; value: string; checked?:boolean}[];\r\n\r\n  constructor(\r\n    options: {\r\n      value?: T;\r\n      key?: string;\r\n      label?: string;\r\n      required?: boolean;\r\n      order?: number;\r\n      controlType?: string;\r\n      type?: string;\r\n      rowDivision?: number;\r\n      dependency?: Dependency;\r\n      dependents?: string[]; dependentType?: string;\r\n      dependencyOn?: boolean;\r\n      checked?:boolean;\r\n      validator?:Validator;\r\n      options?: { key: string; value: string }[];\r\n    } = {}\r\n  ) {\r\n    this.value = options.value;\r\n    this.key = options.key || \"\";\r\n    this.label = options.label || \"\";\r\n    this.required = !!options.required;\r\n    this.validator = options.validator || {} as Validator;\r\n    this.order = options.order === undefined ? 1 : options.order;\r\n    this.rowDivision = options.rowDivision === undefined ? 1 : options.rowDivision;\r\n    this.controlType = options.controlType || \"\";\r\n    this.type = options.type || \"\";\r\n    this.dependencyOn = !!options.dependencyOn;\r\n    this.dependency = options.dependency || {} as Dependency;\r\n    this.dependents = options.dependents;\r\n    this.dependentType = options.dependentType === undefined?\"CONTROL\":options.dependentType;\r\n    this.options = options.options || [];\r\n    this.checked = !!options.checked;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DynamicFormMainComponentComponent } from './dynamic-form-main-component/dynamic-form-main-component.component';\r\nimport { HomeComponent } from './home/home.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    path: 'configure',\r\n    component: DynamicFormMainComponentComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","<small style=\"color: red\" *ngIf=\"form.get(input.key).errors.required\">\n    {{ input.label }} is Required\n  </small>\n  <small style=\"color: red\" *ngIf=\"form.get(input.key).errors.minlength\">\n    {{ input.label }} must be minmum 10 characters.\n  </small>\n  <small style=\"color: red\" *ngIf=\"form.get(input.key).errors.maxlength\">\n    {{ input.label }} must be maximun 11 characters.\n  </small>","import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormField } from '../common/service-form-field';\n\n@Component({\n  selector: 'app-error-message',\n  templateUrl: './error-message.component.html',\n  styleUrls: ['./error-message.component.css']\n})\nexport class ErrorMessageComponent implements OnInit {\n\n  @Input() input: FormField<string>;\n  @Input() form: FormGroup;\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}